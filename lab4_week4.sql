# 1. List the number of films per category.
SELECT category.name AS category, COUNT(*) AS n_films
FROM category
JOIN film_category ON category.category_id = film_category.category_id
JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name
ORDER BY n_films DESC;

# 2. Retrieve the store ID, city, and country for each store.
SELECT store_id, city, country
FROM store
JOIN address ON store.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id;

# 3. Calculate the total revenue generated by each store in dollars.
SELECT store_id, SUM(amount) AS total_revenue
FROM payment
JOIN staff ON payment.staff_id = staff.staff_id
GROUP BY store_id;

# 4. Determine the average running time of films for each category.
SELECT category.name, AVG(film.length) AS running_time
FROM category
JOIN film_category ON category.category_id = film_category.category_id
JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name
ORDER BY running_time DESC;

# BONUS:
# 5. Identify the film categories with the longest average running time.
SELECT category.name, AVG(film.length) AS running_time
FROM category
JOIN film_category ON category.category_id = film_category.category_id
JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name
ORDER BY running_time DESC
LIMIT 1;

# 6. Display the top 10 most frequently rented movies in descending order.
SELECT title, COUNT(*) AS rented_times
FROM film
JOIN inventory ON inventory.film_id = film.film_id
JOIN rental ON inventory.inventory_id = rental.inventory_id
GROUP BY film.film_id
ORDER BY rented_times DESC
LIMIT 10;

# 7. Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT title, store_id
FROM film
JOIN inventory ON inventory.film_id = film.film_id
WHERE title = 'Academy Dinosaur'
GROUP BY store_id;

# 8. Provide a list of all distinct film titles, along with their availability status in the inventory.
SELECT DISTINCT title,
				CASE
                    WHEN IFNULL(COUNT(inventory.inventory_id),0) > 0 THEN 'Available'
                    ELSE 'Not Available'
				END AS availability
FROM film
JOIN inventory ON film.film_id = inventory.film_id
GROUP BY title;












